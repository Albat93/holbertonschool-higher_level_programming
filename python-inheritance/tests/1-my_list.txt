Test Case 1:
>>> my_list = MyList([3, 1, 4, 1, 5, 9])
>>> my_list.print_sorted()
[1, 1, 3, 4, 5, 9]

Test Case 2:
>>> my_list = MyList([10, -2, 3, 7, 5])
>>> my_list.print_sorted()
[-2, 3, 5, 7, 10]

Test Case 3:
>>> my_list = MyList([])
>>> my_list.print_sorted()
[]

Test Case 4:
>>> my_list = MyList([42])
>>> my_list.print_sorted()
[42]

Test Case 5:
>>> my_list = MyList([5, 5, 5, 5])
>>> my_list.print_sorted()
[5, 5, 5, 5]

Test Case 6:
>>> my_list = MyList("abc")
Traceback (most recent call last):
TypeError: list elements must be integers

Test Case 7:
>>> my_list = MyList([3, "a", 5])
Traceback (most recent call last):
TypeError: list elements must be integers

Test Case 8:
>>> my_list = MyList([-3, float("Inf"), 5])
Traceback (most recent call last):
OverflowError: cannot process float infinity

Test Case 9:
>>> my_list = MyList([-3, float("NaN"), 5])
Traceback (most recent call last):
ValueError: cannot process NaN values
